/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GiaoDien;

import Mode.DonHang;
import Mode.KhachHang;
import Mode.NhanVien;
import Mode.SanPham;
import Services.DonHangServices;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import javax.swing.Timer;

/**
 *
 * @author Administrator
 */
public class QuanLyDonHang extends javax.swing.JFrame {

    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
    static String connectionUrl = "jdbc:sqlserver://26.107.57.204:1433;databaseName=DATN_PRO230;user=datn;password=123;trustServerCertificate=true";
    DefaultTableModel tblModel;
    Map<String, String> mapTenToMa = new HashMap<>();
    Map<String, String> mapMaToTen = new HashMap<>();

    Map<String, String> mapTenToMaKH = new HashMap<>();
    Map<String, String> mapMaToTenKH = new HashMap<>();

    Map<String, String> mapTenToMaSP = new HashMap<>();
    Map<String, String> mapMaToTenSP = new HashMap<>();

    /**
     * Creates new form SanPham
     */
    public QuanLyDonHang() {
        initComponents();
        initTable();
        loadData();
        txtTongTien.setEnabled(false);
        sdf.setLenient(false);
        loadNhanVienThuNgan();
        loadKhachHang();
        loadSP();
        timer.start();
    }

    Timer timer = new Timer(120000, new ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            loadNhanVienThuNgan();
            loadKhachHang();
            loadSP();
        }
    });

    public void loadNhanVienThuNgan() {
        List<NhanVien> list = DonHangServices.getTenNhanVienThuNgan();
        cboNhanVien.removeAllItems();
        mapTenToMa.clear();

        for (NhanVien nv : list) {
            String ten = nv.getHoTenNV();
            String ma = nv.getMaNV();
            cboNhanVien.addItem(ten);
            mapTenToMa.put(ten, ma);
            mapMaToTen.put(ma, ten);
        }
    }

    public void loadKhachHang() {
        List<KhachHang> list = DonHangServices.getTenKhach();
        cboKhachHang.removeAllItems();
        mapTenToMaKH.clear();

        for (KhachHang kh : list) {
            String ten = kh.getTenKH();
            String ma = kh.getMaKH();
            cboKhachHang.addItem(ten);
            mapTenToMaKH.put(ten, ma);
            mapMaToTenKH.put(ma, ten);
        }
    }

    public void loadSP() {
        List<SanPham> list = DonHangServices.getTenSP();
        cboSanPham.removeAllItems();
        mapTenToMaSP.clear();

        for (SanPham sp : list) {
            String ten = sp.getTenSP();
            String ma = sp.getMaSP();
            cboSanPham.addItem(ten);
            mapTenToMaSP.put(ten, ma);
            mapMaToTenSP.put(ma, ten);
        }
    }

    public void initTable() {
        tblModel = new DefaultTableModel();
        tblModel.setColumnIdentifiers(new String[]{"Mã đơn hàng", "Tên nhân viên", "Tên khách hàng", "Tên sản phẩm", "Size", "Số lượng", "Ngày tạo đơn", "Hình thức", "Tổng tiển"});
        tblDH.setModel(tblModel);
    }

    public void loadData() {
        List<DonHang> dhlist = DonHangServices.getAll();
        tblModel.setNumRows(0);
        for (DonHang dh : dhlist) {
            tblModel.addRow(new Object[]{dh.getMaDH(), dh.getMaNV(), dh.getMaKH(), dh.getMaSP(), dh.getSize(), dh.getSoLuong(), dh.getNgayDatHang(), dh.getHinhThucThanhToan(), dh.getTongTien()});
        }
    }

    private void tinhTongTien() {
        String tenChonSP = (String) cboSanPham.getSelectedItem();
        String maSP = mapTenToMaSP.get(tenChonSP);
        int soLuong = 0;

        try {
            soLuong = Integer.parseInt(txtSoLuong.getText());
        } catch (NumberFormatException e) {
            txtTongTien.setText(""); // Xóa nếu nhập sai
            return;
        }

        int giaSanPham = DonHangServices.getGiaSanPham(maSP);
        int tongTien = giaSanPham * soLuong;

        txtTongTien.setText(String.valueOf(tongTien)); // Hiển thị tổng tiền
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaDH = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cboHinhThucThanhToan = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDH = new javax.swing.JTable();
        txtTim = new javax.swing.JTextField();
        btnTim = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cboSize = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        btnThanhToan = new javax.swing.JButton();
        DateNgayTaoDon = new com.toedter.calendar.JDateChooser();
        cboNhanVien = new javax.swing.JComboBox<>();
        cboKhachHang = new javax.swing.JComboBox<>();
        cboSanPham = new javax.swing.JComboBox<>();
        btnTaoMa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 51));
        jLabel1.setText("Quản lý đơn hàng");

        jLabel3.setText("Mã nhân viên");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel4.setText("Ngày tạo đơn");

        txtTongTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongTienActionPerformed(evt);
            }
        });

        jLabel5.setText("Mã khách hàng");

        jLabel2.setText("Mã đơn hàng");

        jLabel7.setText("Hình thức thanh toán");

        jLabel8.setText("Tổng tiền");

        cboHinhThucThanhToan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiền mặt", "Quẹt thẻ" }));

        tblDH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã đơn hàng", "Tên nhân viên", "Tên khách hàng", "Tên sản phẩm", "Size", "Số lượng", "Ngày tạo đơn", "Hình thức", "Tổng tiền"
            }
        ));
        tblDH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDHMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDH);

        txtTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimActionPerformed(evt);
            }
        });

        btnTim.setText("Tìm kiếm");
        btnTim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimActionPerformed(evt);
            }
        });

        jLabel6.setText("Mã sản phẩm");

        jLabel9.setText("Size");

        cboSize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S", "M", "L" }));
        cboSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSizeActionPerformed(evt);
            }
        });

        jLabel10.setText("Số lượng");

        txtSoLuong.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSoLuongKeyReleased(evt);
            }
        });

        btnThanhToan.setText("Thanh Toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        DateNgayTaoDon.setDateFormatString("yyyy-MM-dd");

        cboNhanVien.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        cboKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKhachHangActionPerformed(evt);
            }
        });

        cboSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSanPhamActionPerformed(evt);
            }
        });
        cboSanPham.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cboSanPhamKeyReleased(evt);
            }
        });

        btnTaoMa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTaoMa.setText("+");
        btnTaoMa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoMaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(82, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(401, 401, 401))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(btnThem)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnSua)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnTim, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(56, 56, 56)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cboNhanVien, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cboSize, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cboKhachHang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cboSanPham, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(txtMaDH, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnTaoMa, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(50, 50, 50)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtTongTien)
                                        .addComponent(cboHinhThucThanhToan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtSoLuong, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                                        .addComponent(DateNgayTaoDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 749, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnThanhToan)))
                        .addGap(72, 72, 72))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMaDH, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)))
                            .addComponent(btnTaoMa, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(cboNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(cboKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel7)
                                        .addComponent(cboHinhThucThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel8)
                                            .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cboSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnThem)
                                        .addComponent(btnSua)
                                        .addComponent(btnXoa))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(cboSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtTim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnTim)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DateNgayTaoDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimActionPerformed

    private void cboSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboSizeActionPerformed

    private void btnTimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimActionPerformed
        // TODO add your handling code here:
        String MaDH = txtTim.getText().trim();
        if (MaDH.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập mã đơn hàng!");
            return;
        }
        List<DonHang> dhList = (List<DonHang>) DonHangServices.getById(MaDH);
        if (dhList != null) {
            tblModel.setNumRows(0);
            for (DonHang dh : dhList) {
                tblModel.addRow(new Object[]{dh.getMaDH(), dh.getMaNV(), dh.getMaKH(), dh.getMaSP(), dh.getSize(), dh.getSoLuong(), dh.getNgayDatHang(), dh.getHinhThucThanhToan(), dh.getTongTien()});
            }
        } else {
            JOptionPane.showMessageDialog(null, "Không tìm thấy nguyên liệu với mã: " + MaDH);
        }
    }//GEN-LAST:event_btnTimActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        if (txtMaDH.getText().isEmpty()) {
            sb.append("Vui lòng nhập Mã đơn hàng");
        }
        if (txtSoLuong.getText().isEmpty()) {
            sb.append("Vui lòng nhập Mã số lượng");
        } else {
            try {
                int soLuong = Integer.parseInt(txtSoLuong.getText());
                if (soLuong <= 0) {
                    sb.append("Số lượng phải lớn hơn 0");
                }
            } catch (NumberFormatException e) {
                sb.append("Nhập đúng định dạng số lượng\n");
            }
        }
        if (DateNgayTaoDon.getDate() == null) {
            sb.append("Vui lòng chọn ngày tạo đơn");
        }
        if (txtTongTien.getText().isEmpty()) {
            sb.append("Vui lòng nhập Mã tổng tiền");
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb.toString(), "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            DonHang dh = new DonHang();
            dh.setMaDH(txtMaDH.getText());
            String tenChonNV = (String) cboNhanVien.getSelectedItem();
            String maNV = mapTenToMa.get(tenChonNV);
            dh.setMaNV(maNV);
            String tenChonKH = (String) cboKhachHang.getSelectedItem();
            String maKH = mapTenToMaKH.get(tenChonKH);
            dh.setMaKH(maKH);
            String tenChonSP = (String) cboSanPham.getSelectedItem();
            String maSP = mapTenToMaSP.get(tenChonSP);
            dh.setMaSP(maSP);
            dh.setSize((String) cboSize.getSelectedItem());
            dh.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
            dh.setNgayDatHang(DateNgayTaoDon.getDate());
            dh.setHinhThucThanhToan((String) cboHinhThucThanhToan.getSelectedItem());
            dh.setTongTien(Integer.parseInt(txtTongTien.getText()));
            if (!DonHangServices.checkStockBeforeAdd(maSP, Integer.parseInt(txtSoLuong.getText()))) {
                JOptionPane.showMessageDialog(this, "Số lượng trong kho không đủ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int choice = JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm ?", "Thông báo", JOptionPane.OK_CANCEL_OPTION);
            if (choice == JOptionPane.YES_OPTION) {
                if (DonHangServices.Insert(dh)) {
                    loadData();
                    JOptionPane.showMessageDialog(this, "Thêm thành công");
                } else {
                    JOptionPane.showMessageDialog(this, "Thêm thất bại");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:
        int row = tblDH.getSelectedRow();
        if (row > -1) {
            String maDH = (String) tblDH.getValueAt(row, 0);

            // Lấy mã nhân viên từ bảng DonHang
            String query = "SELECT MaNV FROM DonHang WHERE MaDH = ?";
            String maNV = null;

            try (Connection conn = DriverManager.getConnection(connectionUrl); PreparedStatement stmt = conn.prepareStatement(query)) {

                stmt.setString(1, maDH);
                ResultSet rs = stmt.executeQuery();

                if (rs.next()) {
                    maNV = rs.getString("MaNV");
                } else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy đơn hàng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi truy vấn: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String sql = "EXEC ThanhToanDonHang @MaDH = ?,@MaNV = ?";

            // Gọi stored procedure để thanh toán
            try (Connection conn = DriverManager.getConnection(connectionUrl); CallableStatement stmt = conn.prepareCall("{CALL ThanhToanDonHang(?, ?)}")) {

                stmt.setString(1, maDH);
                stmt.setString(2, maNV);
                stmt.execute();
                JOptionPane.showMessageDialog(this, "Thanh toán thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                loadData();

            } catch (Exception e) {
                if (e.getMessage().contains("Đơn hàng này đã được thanh toán")) {
                    JOptionPane.showMessageDialog(this, "Đơn hàng này đã được thanh toán!", "Lỗi", JOptionPane.WARNING_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Lỗi khi thanh toán: " + e.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        if (txtMaDH.getText().isEmpty()) {
            sb.append("Vui lòng nhập Mã đơn hàng");
        }
        if (txtSoLuong.getText().isEmpty()) {
            sb.append("Vui lòng nhập Mã số lượng");
        } else {
            try {
                int soLuong = Integer.parseInt(txtSoLuong.getText());
                if (soLuong <= 0) {
                    sb.append("Số lượng phải lớn hơn 0");
                }
            } catch (NumberFormatException e) {
                sb.append("Nhập đúng định dạng số lượng\n");
            }
        }
        if (DateNgayTaoDon.getDate() == null) {
            sb.append("Vui lòng chọn ngày tạo đơn");
        }
        if (txtTongTien.getText().isEmpty()) {
            sb.append("Vui lòng nhập Mã tổng tiền");
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb.toString(), "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            DonHang dh = new DonHang();
            dh.setMaDH(txtMaDH.getText());
            String tenChonNV = (String) cboNhanVien.getSelectedItem();
            String maNV = mapTenToMa.get(tenChonNV);
            dh.setMaNV(maNV);
            String tenChonKH = (String) cboKhachHang.getSelectedItem();
            String maKH = mapTenToMaKH.get(tenChonKH);
            dh.setMaKH(maKH);
            String tenChonSP = (String) cboSanPham.getSelectedItem();
            String maSP = mapTenToMaSP.get(tenChonSP);
            dh.setMaSP(maSP);
            dh.setSize((String) cboSize.getSelectedItem());
            dh.setSoLuong(Integer.parseInt(txtSoLuong.getText()));
            dh.setNgayDatHang(DateNgayTaoDon.getDate());
            dh.setHinhThucThanhToan((String) cboHinhThucThanhToan.getSelectedItem());
            dh.setTongTien(Integer.parseInt(txtTongTien.getText()));
            int choice = JOptionPane.showConfirmDialog(this, "Bạn có muốn sửa ?", "Thông báo", JOptionPane.OK_CANCEL_OPTION);
            if (choice == JOptionPane.YES_OPTION) {
                if (DonHangServices.Update(dh)) {
                    loadData();
                    JOptionPane.showMessageDialog(this, "Sửa thành công");
                } else {
                    JOptionPane.showMessageDialog(this, "Sửa thất bại");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        if (txtMaDH.getText().isEmpty()) {
            sb.append("Vui lòng nhập Mã đơn hàng");
        }
        if (sb.length() > 0) {
            JOptionPane.showMessageDialog(this, sb.toString(), "Thông báo", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            DonHang dh = new DonHang();
            dh.setMaDH(txtMaDH.getText());
            int choice = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa ?", "Thông báo", JOptionPane.OK_CANCEL_OPTION);
            if (choice == JOptionPane.YES_OPTION) {
                if (DonHangServices.Delete(dh)) {
                    loadData();
                    JOptionPane.showMessageDialog(this, "Xóa thành công");
                } else {
                    JOptionPane.showMessageDialog(this, "Xóa thất bại");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void tblDHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDHMouseClicked
        // TODO add your handling code here:
        int row = tblDH.getSelectedRow();
        if (row > -1) {
            String ma = (String) tblDH.getValueAt(row, 0);
            DonHang dh = DonHangServices.getByName(ma);
            txtMaDH.setText(dh.getMaDH());
            String tenNV = mapMaToTen.get(dh.getMaNV());
            cboNhanVien.setSelectedItem(tenNV);
            String tenKH = mapMaToTenKH.get(dh.getMaKH());
            cboKhachHang.setSelectedItem(tenKH);
            String tenSP = mapMaToTenSP.get(dh.getMaSP());
            cboSanPham.setSelectedItem(tenSP);
            cboSize.setSelectedItem(dh.getSize());
            txtSoLuong.setText(String.valueOf(dh.getSoLuong()));
            DateNgayTaoDon.setDate(dh.getNgayDatHang());
            cboHinhThucThanhToan.setSelectedItem(dh.getHinhThucThanhToan());
            txtTongTien.setText(String.valueOf(dh.getTongTien()));
        }
    }//GEN-LAST:event_tblDHMouseClicked

    private void txtTongTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTongTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTongTienActionPerformed

    private void txtSoLuongKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSoLuongKeyReleased
        // TODO add your handling code here:
        tinhTongTien();
    }//GEN-LAST:event_txtSoLuongKeyReleased

    private void cboSanPhamKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboSanPhamKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_cboSanPhamKeyReleased

    private void cboSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSanPhamActionPerformed
        // TODO add your handling code here:
        tinhTongTien();
    }//GEN-LAST:event_cboSanPhamActionPerformed

    private void cboKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKhachHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboKhachHangActionPerformed

    private void btnTaoMaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoMaActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "SELECT MAX(MaDH) FROM DonHang";
            Connection conn = DriverManager.getConnection(connectionUrl);
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            int soMoi = 1;
            if (rs.next() && rs.getString(1) != null) {
                String maCu = rs.getString(1); 
                String soStr = maCu.substring(2).trim();
                soMoi = Integer.parseInt(soStr) + 1;
                String maMoi = String.format("DH%02d", soMoi);
                txtMaDH.setText(maMoi);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lỗi tạo mã đơn hàng");
        }
    }//GEN-LAST:event_btnTaoMaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyDonHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyDonHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyDonHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyDonHang.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLyDonHang().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateNgayTaoDon;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnTaoMa;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTim;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboHinhThucThanhToan;
    private javax.swing.JComboBox<String> cboKhachHang;
    private javax.swing.JComboBox<String> cboNhanVien;
    private javax.swing.JComboBox<String> cboSanPham;
    private javax.swing.JComboBox<String> cboSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDH;
    private javax.swing.JTextField txtMaDH;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTim;
    private javax.swing.JTextField txtTongTien;
    // End of variables declaration//GEN-END:variables
}
